@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = null;
}

<div class="card">
    <div class="card-body">
        <form id="addTrans">
            <div class="mb-3">
                <label for="date" class="form-label">Date<span class="text-danger">*</span></label>
                <input type="date" class="form-control" id="date" name="date">
            </div>
            <div class="mb-3 row align-items-center">
                <label class="form-label col">Type<span class="text-danger">*</span></label>
                <div class="form-check col-3">
                    <input type="radio" class="form-check-input" id="Expense" name="Type" value="Expense" checked>
                    <label for="Expense" class="form-check-label">Expense</label>
                </div>
                <div class="form-check col-3">
                    <input type="radio" class="form-check-input" id="TypeIncome" name="Type" value="Income">
                    <label for="TypeIncome" class="form-check-label">Income</label>
                </div>
                <div id="type-error" class="error"></div>
            </div>
            <div class="mb-3">
                <label for="name" class="form-label">Name<span class="text-danger">*</span></label>
                <input type="text" class="form-control" id="name" required>
            </div>
            <div class="mb-3">
                <label for="amount" class="form-label">Amount<span class="text-danger">*</span></label>
                <input type="number" class="form-control" id="amount" required>
            </div>
            <div class="mb-3">
                <label for="BudgetPlanId" class="form-label">Budget Plan<span class="text-danger">*</span></label>
                <select class="form-select" id="BudgetPlanId" name="BudgetPlanId" style="font-size: 14px; color: #2c3e50;">
                    <option>-- Select Plan --</option>
                    <option>Monthly Plan</option>
                </select>
            </div>
            <div class="mb-3">
                <label for="CategoryId" class="form-label">Category<span class="text-danger">*</span></label>
                <select class="form-select" id="CategoryId" name="CategoryId" style="font-size: 14px; color: #2c3e50;">
                    <option>-- Select Category --</option>
                    <option>Groceries</option>
                </select>
            </div>

            <style>
                .tag-container {
                    display: flex;
                    flex-wrap: wrap;
                    align-items: center;
                    padding: 6px;
                    border: 1px solid #ccc;
                    border-radius: 4px;
                    position: relative;
                }

                .tag {
                    background-color: #4CAF50;
                    color: white;
                    padding: 5px 8px;
                    border-radius: 3px;
                    margin: 2px;
                    display: flex;
                    align-items: center;
                }

                .remove-tag {
                    background: none;
                    border: none;
                    color: white;
                    font-weight: bold;
                    margin-left: 5px;
                    cursor: pointer;
                }

                .tag-input {
                    border: none;
                    outline: none;
                    margin-left: 5px;
                    flex: 1;
                }

                .tag-dropdown {
                    position: absolute;
                    top: 100%;
                    left: 0;
                    width: 100%;
                    max-height: 150px;
                    overflow-y: auto;
                    background-color: #ffffff;
                    border: 1px solid #ccc;
                    border-radius: 4px;
                    display: none;
                    z-index: 10;
                }

                .dropdown-item {
                    padding: 8px 12px;
                    cursor: pointer;
                }

                .dropdown-item:hover {
                    background-color: #f1f1f1;
                }
            </style>

            <div class="mb-3">
                <label for="tagInput">Tags</label>
                <div id="tagContainer" class="tag-container">
                    <input type="text" id="tagInput" placeholder="Type a tag and press Enter" class="tag-input" />
                    <div id="tagDropdown" class="tag-dropdown"></div> <!-- Dropdown container for suggestions -->
                </div>
                <input type="hidden" name="Tags" id="tagValues" />
            </div>
        </form>
    </div>

    <div class="card-footer d-flex justify-content-evenly">
        <button class="btn btn-outline-primary" data-bs-dismiss="modal">Cancel</button>
        <button class="btn btn-primary" id="btnSave">Save</button>
    </div>
</div>

<script>
    $(document).ready(function () {
        $("#staticModalLabel").text("@ViewBag.Title")

        let tags = [];
        const availableTags = ["Food", "Transport", "Utilities", "Entertainment", "Health", "Education", "Shopping"];

        $('#tagInput').on('focus keyup', function () {
            const inputText = $(this).val().toLowerCase();
            const filteredTags = availableTags.filter(tag => tag.toLowerCase().includes(inputText) && !tags.includes(tag));
            showDropdown(filteredTags);
        });

        $('#tagInput').keypress(function (e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                const tagText = $(this).val().trim();

                if (tagText && !tags.includes(tagText)) {
                    addTag(tagText);
                    $(this).val('');  // Clear input
                    hideDropdown();
                }
            }
        });

        // Function to add tag to the UI and list
        function addTag(text) {
            tags.push(text);
            updateTagValues();

            const tagElement = $(`<span class="tag">${text}<button class="remove-tag" type="button">&times;</button></span>`);

            // Attach event for removing the tag
            tagElement.find('.remove-tag').click(function () {
                removeTag(text);
            });

            $('#tagInput').before(tagElement);  // Insert tag before the input
        }

        // Function to remove tag from UI and list
        function removeTag(text) {
            tags = tags.filter(tag => tag !== text);
            updateTagValues();

            // Find and remove the tag element
            $('#tagContainer .tag').filter(function () {
                return $(this).text().includes(text);
            }).remove();
        }

        // Show dropdown with filtered tags
        function showDropdown(filteredTags) {
            const dropdown = $('#tagDropdown');
            dropdown.empty();  // Clear previous options

            filteredTags.forEach(tag => {
                const tagOption = $(`<div class="dropdown-item">${tag}</div>`);
                tagOption.click(function () {
                    addTag(tag);
                    $('#tagInput').val('');  // Clear input
                    hideDropdown();
                });
                dropdown.append(tagOption);
            });

            dropdown.show();
        }

        function hideDropdown() {
            $('#tagDropdown').hide();
        }

        function updateTagValues() {
            $('#tagValues').val(tags.join(','));  // Update hidden input with comma-separated tags
        }

        // Hide dropdown when clicking outside
        $(document).click(function (event) {
            if (!$(event.target).closest('#tagContainer').length) {
                hideDropdown();
            }
        });
    });
</script>
