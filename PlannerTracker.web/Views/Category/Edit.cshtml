@*
For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model VMCategory

@{
    Layout = null;
}

<div class="card">
    <div class="card-body">
        <form id="editCategory">
            <div class="mb-3">
                <label for="CategoryName" class="form-label">Category Name<span class="text-danger">*</span></label>
                <input type="text" class="form-control" id="CategoryName" name="CategoryName"
                    value="@Model.CategoryName">
            </div>
            <div class="mb-3 row align-items-center">
                <label class="form-label col">Type<span class="text-danger">*</span></label>
                @if (Model.Type == "Expense")
                {
                    <div class="form-check col-3">
                        <input type="radio" class="form-check-input" id="Expense" name="Type" value="Expense" checked>
                        <label for="Expense" class="form-check-label">Expense</label>
                    </div>
                    <div class="form-check col-3">
                        <input type="radio" class="form-check-input" id="TypeIncome" name="Type" value="Income">
                        <label for="TypeIncome" class="form-check-label">Income</label>
                    </div>
                }
                else
                {
                    <div class="form-check col-3">
                        <input type="radio" class="form-check-input" id="Expense" name="Type" value="Expense">
                        <label for="Expense" class="form-check-label">Expense</label>
                    </div>
                    <div class="form-check col-3">
                        <input type="radio" class="form-check-input" id="TypeIncome" name="Type" value="Income" checked>
                        <label for="TypeIncome" class="form-check-label">Income</label>
                    </div>
                }
                <div id="type-error" class="error"></div>
            </div>
            <div class="mb-3">
                <label for="Description" class="form-label">Description</label>
                <input type="text" class="form-control" id="Description" name="Description" value="@Model.Description">
            </div>
        </form>
    </div>

    <div class="card-footer d-flex justify-content-evenly">
        <button class="btn btn-outline-primary" data-bs-dismiss="modal">Batal</button>
        <button class="btn btn-primary" id="btnSave">Simpan</button>
    </div>
</div>

<script>
    $.validator.addMethod("noSpace", function (value, element) {
        return value.trim().length > 0
    }, "Input tidak boleh kosong atau hanya diisi dengan spasi!")

    $(document).ready(() => {
        $("#staticModalLabel").text("@ViewBag.Title")

        $("#editCategory").validate({
            rules: {
                CategoryName: {
                    required: true,
                    noSpace: true
                },
                Type: "required"
            },
            messages: {
                CategoryName: {
                    required: "Category name is required!"
                },
                Type: {
                    required: "Type is required!"
                },
            },
            errorPlacement: function (error, element) {
                error.addClass("text-danger")
                if (element.attr("name") == "Type") {
                    error.appendTo("#type-error"); // Tempat error di gender-error div
                } else {
                    error.insertAfter(element);
                }
            }
        })

        $("#btnSave").click(function (e) {
            e.preventDefault()
            console.log("btnSave clicked");
            if ($("#editCategory").valid()) {
                let formData = $("#editCategory").serialize()
                formData += "&id=" + encodeURIComponent("@Model.Id")
                console.log(formData);

                $.ajax({
                    url: "/Category/UpdateCategory",
                    type: "post",
                    data: formData,
                    dataType: "json",
                    beforeSend: () => { },
                    success: function (res) {
                        if (res.statusCode == 200) {
                            toastr.success(res.message)
                            setTimeout(function () {
                                location.reload();
                            }, 1500);
                        } else {
                            toastr.error(res.message)
                        }
                    },
                    error: function (errRes) {
                        console.error(errRes)
                        debugger
                    }
                })
            }
        })
    })
</script>
