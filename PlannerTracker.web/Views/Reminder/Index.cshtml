@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model Pagination<VMReminder>?

@{
}

<style>
    .page-title {
        font-size: 1.8rem;
        font-weight: bold;
    }

    .filter-section {
        background-color: #f8f9fa;
        border: 1px solid #ddd;
        border-radius: 8px;
    }

        .filter-section .form-label {
            font-weight: bold;
            color: #495057;
        }

    .table-responsive {
        background: #ffffff;
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
    }

    .table thead {
        background-color: #343a40;
        color: #fff;
    }

    .table tbody tr:hover {
        background-color: #f8f9fa;
    }

    .badge {
        font-size: 0.9rem;
        padding: 0.5em;
        border-radius: 8px;
    }
</style>

<div class="container mt-5">
    <!-- Page Title -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="page-title">All Reminders</h1>
        <button id="btnAdd" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#staticModal">
            Add Reminder
        </button>
    </div>

    <!-- Filter Section -->
    <div class="filter-section bg-light p-3 rounded mb-4">
        <form id="filterForm" class="row g-3">
            <div class="col-md-4">
                <label for="filterStatus" class="form-label">Filter by Status</label>
                <select id="filterStatus" class="form-select" name="IsCompleted">
                    <option value="">All</option>
                    <option value="false" selected="@(ViewBag.Status != null && !(bool)ViewBag.Status)">Pending</option>
                    <option value="true" selected="@(ViewBag.Status != null && (bool)ViewBag.Status)">Completed</option>
                </select>
            </div>
            <div class="col-md-4">
                <label for="filterDateFrom" class="form-label">Date From</label>
                <input type="date" id="filterDateFrom" class="form-control" name="DateFrom" value="@ViewBag.DateFrom?.ToString("yyyy-MM-dd")">
            </div>
            <div class="col-md-4">
                <label for="filterDateTo" class="form-label">Date To</label>
                <input type="date" id="filterDateTo" class="form-control" name="DateTo" value="@ViewBag.DateTo?.ToString("yyyy-MM-dd")" disabled="@(ViewBag.DateTo == null && ViewBag.DateFrom == null)">
            </div>
            <div class="col-12 text-end">
                <button type="button" class="btn btn-primary" id="applyFilters">Apply Filters</button>
                <button type="button" class="btn btn-secondary" id="resetFilters">Reset Filters</button>
            </div>
        </form>
    </div>

    <!-- Reminders Table -->
    <div class="table-responsive">
        <table class="table table-striped table-hover align-middle">
            <thead class="table-dark">
                <tr>
                    <th>#</th>
                    <th>Title</th>
                    <th>Due Date</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Count > 0)
                {
                    int no = ViewBag.FirstIdx;
                    @foreach (var reminder in Model)
                    {
                        <tr>
                            <td>@no.</td>
                            <td>@reminder.Title</td>
                            <td>@reminder.ReminderDate.ToString("D")</td>
                            <td>
                                @if (reminder.IsCompleted == true)
                                {
                                    <span class="badge bg-success">Completed</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning">Pending</span>
                                }
                            </td>
                            <td>
                                <button class="btn btn-sm btn-primary">Edit</button>
                                <button class="btn btn-sm btn-success" @(reminder.IsCompleted == true ? "disabled" : "")>Mark as Completed</button>
                                <button class="btn btn-sm btn-danger">Delete</button>
                            </td>
                        </tr>
                        no += 1;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="text-center">-- No Data --</td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="d-flex justify-content-end gap-1 mt-3">
            @if (Model != null)
            {
                <div class="my-auto me-3">Menampilkan @ViewBag.FirstIdx-@ViewBag.LastIdx dari @Model.TotalData</div>
                <button class="btn @(Model.HasPreviousPage ? "btn-outline-primary" : "btn-secondary disabled")" id="btnPrev">
                    <i class="fas fa-angle-left"></i>
                </button>
                <button class="btn @(Model.HasNextPage ? "btn-outline-primary" : "btn-secondary disabled")" id="btnNext">
                    <i class="fas fa-angle-right"></i>
                </button>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function RefreshPage(currentPageSize, pageNumber) {
            let filter = {
                isCompleted: $("#filterStatus").val(),
                dateFrom: $("#filterDateFrom").val(),
                dateTo: $("#filterDateTo").val()
            }

            // let filter = $("#filterForm").serialize()

            location.href = `/reminder?filter=${JSON.stringify(filter)}&currentPageSize=${currentPageSize}&pageNumber=${pageNumber}`
            // location.href = `/reminder?filter=${filter}&currentPageSize=${currentPageSize}&pageNumber=${pageNumber}`
        }

        $(document).ready(() => {
            $("#btnAdd").click((e) => {
                e.preventDefault()
                $("#staticModalBody").html(spinner)
                $("#staticModalBody").load("/Reminder/Create")
            })

            $("#btnPrev").click((e) => {
                e.preventDefault()

                RefreshPage('@ViewBag.PageSize', '@(!Model!.HasPreviousPage ? Model.PageIndex : Model.PageIndex - 1)')
            })

            $("#btnNext").click((e) => {
                e.preventDefault()

                RefreshPage('@ViewBag.PageSize', '@(!Model!.HasNextPage ? Model.PageIndex : Model.PageIndex + 1)')
            })

            $("#applyFilters").click((e) => {
                e.preventDefault()
                console.log($("#filterForm").serialize())

                RefreshPage('@ViewBag.PageSize', 1)
            })

            $("#resetFilters").click((e) => {
                e.preventDefault()

                $("#filterStatus").val("")
                $("#filterDateFrom").val("")
                $("#filterDateTo").val("")

                RefreshPage('@ViewBag.PageSize', 1)

                $("#filterDateTo").prop("disabled", true)
            })

            $("#filterDateFrom").change((e) => {
                e.preventDefault()
                if ($("#filterDateFrom").val() !== "") {
                    $("#filterDateTo").prop("disabled", false)
                } else {
                    $("#filterDateTo").prop("disabled", true)
                }
            })

            $("#filterDateTo").focus((e) => {
                e.preventDefault()
                $("#filterDateTo").prop("min", $("#filterDateFrom").val())
            })
        })
    </script>
}
